{
    "openapi": "3.0.1",
    "info": {
      "title": "Player CRUD",
      "description": "Aplikasi Untuk CRUD Player",
      "termsOfService": "http://ninda.com/terms/",
      "contact": {
        "name": "API Support",
        "url": "http://www.ninda.com/support",
        "email": "support@example.com"
      },
      "license": {
        "name": "Apache 2.0",
        "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
      },
      "version": "1.0.1"
    },
    "servers": [
      {
        "url": "http://localhost:4000",
        "description": "Development Server"
      },
      {
        "url": "http://production.com",
        "description": "Production Server"
      }
    ],
    "tags": [
      {
        "name": "Players",
        "description": "End Point Untuk Operasi CRUD Data Player"
      }
    ],
    "paths": {
      "/api/v1/players/": {
        "post": {
          "tags": ["Players"],
          "summary": "Create A new Player",
          "operationId": "createPlayer",
          "requestBody": {
            "description": "Buat Player Baru",
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/components/schemas/Create_Player_Body"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Create_Player_Body"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "sucessful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "result": {
                        "type": "string"
                      },
                      "data": {
                        "$ref": "#/components/schemas/Player"
                      }
                    }
                  }
                }
              }
            },
            "400": {
                "description": "Player Data Is Not Complete",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "result": {
                            "type": "string",
                            "example": "Failed"
                        },
                        "message": {
                          "type": "string",
                          "example": "username or email cannot empty"
                        }
                      }
                    }
                  }
                }
            },
            "500": {
              "description": "error operation",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Internal server error"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "get": {
          "tags": ["Players"],
          "summary": "Get All Players Without Condition",
          "operationId": "getPlayers",
          "parameters":[
            {
              "name": "username",
              "in": "query",
              "description": "Username of Player",
              "schema": {
                "type": "string",
                "example": "PussySlayer613"
              }
            },
            {
              "name": "email",
              "in": "query",
              "description": "Email of Player",
              "schema": {
                "type": "string",
                "example": "pussy.slay3r@gmail.com"
              }
            },
            {
              "name": "experience",
              "in": "query",
              "description": "Experience of Player",
              "schema": {
                "type": "integer",
                "example": 600000
              }
            },
            {
              "name": "lvl",
              "in": "query",
              "description": "Level of Player",
              "schema": {
                "type": "integer",
                "example": 600
              }
            }
          ],
          "description": "Get Players From Database Without Condition",
          "responses": {
            "200": {
              "description": "Successfully get Players",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "result": {
                        "type": "string",
                        "example": "Success"
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/Player"
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "error operation",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Internal server error"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/players/{id}": {
        "get": {
          "tags": ["Players"],
          "summary": "Get Player By ID",
          "operationId": "getPlayerById",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID of User",
              "required": true,
              "schema": {
                "type": "string",
                "example": "1"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully Get Player",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "result": {
                        "type": "string",
                        "example": "Success"
                      },
                      "data": {
                        "$ref": "#/components/schemas/Player"
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "Player Data Not Found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Player with ${id} Not Found"
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "error operation",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Internal server error"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": ["Players"],
          "summary": "Edit Player By ID",
          "operationId": "editPlayerByID",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID of Player",
              "required": true,
              "schema": {
                "type": "string",
                "example": "1"
              }
            }
          ],
          "requestBody": {
            "description": "Update Existing Player Data",
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/components/schemas/Update_Player_Body"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Update_Player_Body"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successfully Update Player",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                        "result": {
                            "type": "string",
                            "example": "Success"
                        },
                        "message": {
                            "type": "string",
                            "example": "Player with id: ${id} successfully updated"
                        },
                        "data": {
                            "$ref": "#/components/schemas/Player"
                        }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "result":{
                        "type":"string",
                        "example": "failed"
                      },
                      "message": {
                        "type": "string",
                        "example": "Some Error Message"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": ["Players"],
          "summary": "Delete Players By ID",
          "operationId": "deletePlayerByID",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID of Player",
              "required": true,
              "schema": {
                "type": "string",
                "example": "1"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully delete Player",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                        "result":{
                            "type": "string",
                            "example": "Success"
                        },
                        "message": {
                            "type": "string",
                            "example": "Player with id: ${id}, was deleted successfully"
                        }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Player Data Not Found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                        "result":{
                            "type":"string",
                            "example":"FAILED"
                        },
                        "message": {
                            "type": "string",
                            "example": "Cannot delete Player with id=${id}. Maybe Player was not found!"
                        }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "error operation",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Internal server error"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/players/exp/{id}": {
        "post": {
          "tags": ["Players"],
          "summary": "Update Player Experience",
          "operationId": "updateExperience",
          "requestBody": {
            "description": "Update game experience player by ID",
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/components/schemas/Update_Experience_Body"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Update_Experience_Body"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "sucessful update",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                        "result":{
                            "type":"string",
                            "example":"SUCCESS"
                        },
                        "message": {
                            "type": "string",
                            "example": "Player with id = ${id} gain ${exp} experience. Total experience = ${player.experience}"
                        }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "error update",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                        "result":{
                            "type":"string",
                            "example":"Failed"
                        },
                        "message": {
                            "type": "string",
                            "example": "Exp field cannot be empty"
                        }
                    }
                  }
                }
              }
            },
            "404": {
                "description": "Player Data Not Found",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                          "result":{
                              "type":"string",
                              "example":"Not found"
                          },
                          "message": {
                              "type": "string",
                              "example": "Player with ${id} not found"
                          }
                      }
                    }
                  }
                }
            },
            "500": {
              "description": "error operation",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Internal server error"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "Create_Player_Body": {
          "required": ["username", "email", "password", "experience", "lvl"],
          "type": "object",
          "properties": {
            "username": {
              "type": "string",
              "example": "PussySlayer613"
            },
            "email": {
              "type": "string",
              "example": "pussy.slay3r@gmail.com"
            },
            "password": {
              "type": "string",
              "example": "youknownothing"
            },
            "experience":{
                "type": "integer",
                "example": 600000
            },
            "lvl": {
                "type": "integer",
                "example": 600
            }
          }
        },
        "Update_Player_Body": {
          "type": "object",
          "properties": {
            "username": {
              "type": "string",
              "example": "PussySlayer613"
            },
            "email": {
              "type": "string",
              "example": "pussy.slay3r@gmail.com"
            },
            "password": {
              "type": "string",
              "example": "youknownothing"
            },
            "experience":{
                "type": "integer",
                "example": 600000
            },
            "lvl": {
                "type": "integer",
                "example": 600
            }
          }
        },
        "Player": {
          "required": ["username", "email", "password", "experience", "lvl"],
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "1"
            },
            "username": {
              "type": "string",
              "example": "PussySlayer613"
            },
            "email": {
              "type": "string",
              "example": "pussy.slay3r@gmail.com"
            },
            "password": {
              "type": "string",
              "example": "$2b$10$up36rrrI1jGTldWAFuzqv.2c.tZLcGYodhqvO3cGNf1oBlM9rV4/m"
            },
            "experience":{
                "type": "integer",
                "example": 600000
            },
            "lvl": {
                "type": "integer",
                "example": 600
            },
            "created_at": {
              "type": "string",
              "format": "date",
              "example": "2022-03-25T16:56:14.464Z"
            },
            "updated_at": {
              "type": "string",
              "format": "date",
              "example": "2022-03-25T16:56:14.464Z"
            }
          }
        },
        "Update_Experience_Body": {
          "required": ["exp"],
          "type": "object",
          "properties": {
            "exp": {
              "type": "integer",
              "example": "600000"
            }
          }
        }
      }
    }
  }
  